
main:     file format elf32-i386
main
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000ed1 memsz 0x00000f24 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ba7  00000000  00000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000016d  00000ba7  00000ba7  00001ba7  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000001b1  00000d20  00000d20  00001d20  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000044  00000ee0  00000ee0  00001ed1  2**5
                  ALLOC
  4 .comment      0000002a  00000000  00000000  00001ed1  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000ba7 l    d  .rodata	00000000 .rodata
00000d20 l    d  .data	00000000 .data
00000ee0 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000d24 g     O .data	00000004 fodasse2
00000d20 g     O .data	00000004 fodasse
00000500 g     F .text	0000000d print_addr
00000510 g     F .text	00000016 get_screen_access
000004d0 g     F .text	0000000d print
000004a9 g       .text	00000000 printADDRASM
000004ac g       .text	00000000 get_screen_accessASM
000006b0 g     F .text	0000002a memcpy_prgm
00000010 g     F .text	00000008 fds
000007b0 g     F .text	0000018f sleep_this
00000ea4 g     O .data	00000002 test7
00000eac g     O .data	00000004 test9
00000680 g     F .text	0000002a memcpy
00000740 g     F .text	0000000f enable_int
00000590 g     F .text	00000022 malloc
00000570 g     F .text	00000019 sleep
00000630 g     F .text	00000016 test_screen_buffer
000004e0 g     F .text	0000001c input
00000ea8 g     O .data	00000004 test8
00000710 g     F .text	0000000f new_line
000004a0 g       .text	00000000 printASM
00000eb8 g     O .data	00000008 test12
00000ecc g     O .data	00000005 test14
00000e40 g     O .data	00000064 test6
00000dc0 g     O .data	00000064 test4
00000020 g     F .text	000003d6 test_data_types
000004af g       .text	00000000 get_addrASM
00000ee0 g     O .bss	00000044 OS_FUNCTIONS
00000530 g     F .text	00000039 get_OS_FUNCTIONS_addr
00000d28 g     O .data	0000000a test
00000790 g     F .text	00000018 set_buffer
000006e0 g     F .text	0000002a memcmp
000004a3 g       .text	00000000 quit_app
00000eb0 g     O .data	00000004 test10
00000960 g     F .text	00000247 test_prgm
00000650 g     F .text	0000002a memset
00000430 g     F .text	00000069 main
00000750 g     F .text	00000018 get_mouse_info
00000eb4 g     O .data	00000004 test11
00000730 g     F .text	0000000f finish_int
00000d40 g     O .data	00000064 test2
00000610 g     F .text	00000019 print_2
00000400 g     F .text	0000002c test_strings
000004b2 g       .text	00000000 test_screen_bufferASM
000005c0 g     F .text	00000022 zalloc
00000e24 g     O .data	0000000a test5
00000770 g     F .text	00000018 get_clock
00000da4 g     O .data	0000000a test3
00000720 g     F .text	0000000f clear_screen
000004a6 g       .text	00000000 inputASM
00000ec0 g     O .data	0000000c test13
000005f0 g     F .text	00000019 free
00000940 g     F .text	00000018 get_prgm_offset



Disassembly of section .text:

00000000 <fds-0x10>:
   0:	e9 2b 04 00 00       	jmp    430 <main>
   5:	66 90                	xchg   %ax,%ax
   7:	66 90                	xchg   %ax,%ax
   9:	66 90                	xchg   %ax,%ax
   b:	66 90                	xchg   %ax,%ax
   d:	66 90                	xchg   %ax,%ax
   f:	90                   	nop

00000010 <fds>:
  10:	8b 44 24 04          	mov    0x4(%esp),%eax
  14:	83 c0 01             	add    $0x1,%eax
  17:	c3                   	ret    
  18:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
  1f:	90                   	nop

00000020 <test_data_types>:
  20:	83 ec 3c             	sub    $0x3c,%esp
  23:	83 ec 0c             	sub    $0xc,%esp
  26:	68 a7 0b 00 00       	push   $0xba7
  2b:	e8 a0 04 00 00       	call   4d0 <print>
  30:	83 c4 10             	add    $0x10,%esp
  33:	a1 20 0d 00 00       	mov    0xd20,%eax
  38:	89 44 24 08          	mov    %eax,0x8(%esp)
  3c:	a1 24 0d 00 00       	mov    0xd24,%eax
  41:	89 44 24 04          	mov    %eax,0x4(%esp)
  45:	81 7c 24 04 e8 03 00 	cmpl   $0x3e8,0x4(%esp)
  4c:	00 
  4d:	75 51                	jne    a0 <test_data_types+0x80>
  4f:	83 ec 0c             	sub    $0xc,%esp
  52:	ff 74 24 10          	pushl  0x10(%esp)
  56:	e8 b5 ff ff ff       	call   10 <fds>
  5b:	83 c4 10             	add    $0x10,%esp
  5e:	a3 24 0d 00 00       	mov    %eax,0xd24
  63:	a1 24 0d 00 00       	mov    0xd24,%eax
  68:	3d e9 03 00 00       	cmp    $0x3e9,%eax
  6d:	75 17                	jne    86 <test_data_types+0x66>
  6f:	83 ec 0c             	sub    $0xc,%esp
  72:	68 ba 0b 00 00       	push   $0xbba
  77:	e8 54 04 00 00       	call   4d0 <print>
  7c:	83 c4 10             	add    $0x10,%esp
  7f:	e8 8c 06 00 00       	call   710 <new_line>
  84:	eb 1a                	jmp    a0 <test_data_types+0x80>
  86:	83 ec 0c             	sub    $0xc,%esp
  89:	68 c2 0b 00 00       	push   $0xbc2
  8e:	e8 3d 04 00 00       	call   4d0 <print>
  93:	83 c4 10             	add    $0x10,%esp
  96:	b8 00 00 00 00       	mov    $0x0,%eax
  9b:	e9 52 03 00 00       	jmp    3f2 <test_data_types+0x3d2>
  a0:	83 7c 24 08 45       	cmpl   $0x45,0x8(%esp)
  a5:	75 5d                	jne    104 <test_data_types+0xe4>
  a7:	83 ec 0c             	sub    $0xc,%esp
  aa:	68 cd 0b 00 00       	push   $0xbcd
  af:	e8 1c 04 00 00       	call   4d0 <print>
  b4:	83 c4 10             	add    $0x10,%esp
  b7:	e8 54 06 00 00       	call   710 <new_line>
  bc:	a1 20 0d 00 00       	mov    0xd20,%eax
  c1:	83 ec 0c             	sub    $0xc,%esp
  c4:	50                   	push   %eax
  c5:	e8 46 ff ff ff       	call   10 <fds>
  ca:	83 c4 10             	add    $0x10,%esp
  cd:	89 44 24 08          	mov    %eax,0x8(%esp)
  d1:	83 7c 24 08 46       	cmpl   $0x46,0x8(%esp)
  d6:	75 12                	jne    ea <test_data_types+0xca>
  d8:	83 ec 0c             	sub    $0xc,%esp
  db:	68 d3 0b 00 00       	push   $0xbd3
  e0:	e8 eb 03 00 00       	call   4d0 <print>
  e5:	83 c4 10             	add    $0x10,%esp
  e8:	eb 1a                	jmp    104 <test_data_types+0xe4>
  ea:	83 ec 0c             	sub    $0xc,%esp
  ed:	68 d9 0b 00 00       	push   $0xbd9
  f2:	e8 d9 03 00 00       	call   4d0 <print>
  f7:	83 c4 10             	add    $0x10,%esp
  fa:	b8 00 00 00 00       	mov    $0x0,%eax
  ff:	e9 ee 02 00 00       	jmp    3f2 <test_data_types+0x3d2>
 104:	e8 07 06 00 00       	call   710 <new_line>
 109:	c7 44 24 2c 00 00 00 	movl   $0x0,0x2c(%esp)
 110:	00 
 111:	eb 33                	jmp    146 <test_data_types+0x126>
 113:	8b 44 24 2c          	mov    0x2c(%esp),%eax
 117:	05 28 0d 00 00       	add    $0xd28,%eax
 11c:	0f b6 00             	movzbl (%eax),%eax
 11f:	8b 54 24 2c          	mov    0x2c(%esp),%edx
 123:	38 d0                	cmp    %dl,%al
 125:	74 1a                	je     141 <test_data_types+0x121>
 127:	83 ec 0c             	sub    $0xc,%esp
 12a:	68 e5 0b 00 00       	push   $0xbe5
 12f:	e8 9c 03 00 00       	call   4d0 <print>
 134:	83 c4 10             	add    $0x10,%esp
 137:	b8 00 00 00 00       	mov    $0x0,%eax
 13c:	e9 b1 02 00 00       	jmp    3f2 <test_data_types+0x3d2>
 141:	83 44 24 2c 01       	addl   $0x1,0x2c(%esp)
 146:	83 7c 24 2c 09       	cmpl   $0x9,0x2c(%esp)
 14b:	7e c6                	jle    113 <test_data_types+0xf3>
 14d:	83 ec 0c             	sub    $0xc,%esp
 150:	68 f1 0b 00 00       	push   $0xbf1
 155:	e8 76 03 00 00       	call   4d0 <print>
 15a:	83 c4 10             	add    $0x10,%esp
 15d:	e8 ae 05 00 00       	call   710 <new_line>
 162:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
 169:	00 
 16a:	eb 58                	jmp    1c4 <test_data_types+0x1a4>
 16c:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
 173:	00 
 174:	eb 42                	jmp    1b8 <test_data_types+0x198>
 176:	8b 54 24 28          	mov    0x28(%esp),%edx
 17a:	89 d0                	mov    %edx,%eax
 17c:	c1 e0 02             	shl    $0x2,%eax
 17f:	01 d0                	add    %edx,%eax
 181:	01 c0                	add    %eax,%eax
 183:	8b 54 24 24          	mov    0x24(%esp),%edx
 187:	01 d0                	add    %edx,%eax
 189:	05 40 0d 00 00       	add    $0xd40,%eax
 18e:	0f b6 00             	movzbl (%eax),%eax
 191:	8b 54 24 24          	mov    0x24(%esp),%edx
 195:	38 d0                	cmp    %dl,%al
 197:	74 1a                	je     1b3 <test_data_types+0x193>
 199:	83 ec 0c             	sub    $0xc,%esp
 19c:	68 f7 0b 00 00       	push   $0xbf7
 1a1:	e8 2a 03 00 00       	call   4d0 <print>
 1a6:	83 c4 10             	add    $0x10,%esp
 1a9:	b8 00 00 00 00       	mov    $0x0,%eax
 1ae:	e9 3f 02 00 00       	jmp    3f2 <test_data_types+0x3d2>
 1b3:	83 44 24 24 01       	addl   $0x1,0x24(%esp)
 1b8:	83 7c 24 24 09       	cmpl   $0x9,0x24(%esp)
 1bd:	7e b7                	jle    176 <test_data_types+0x156>
 1bf:	83 44 24 28 01       	addl   $0x1,0x28(%esp)
 1c4:	83 7c 24 28 09       	cmpl   $0x9,0x28(%esp)
 1c9:	7e a1                	jle    16c <test_data_types+0x14c>
 1cb:	83 ec 0c             	sub    $0xc,%esp
 1ce:	68 03 0c 00 00       	push   $0xc03
 1d3:	e8 f8 02 00 00       	call   4d0 <print>
 1d8:	83 c4 10             	add    $0x10,%esp
 1db:	e8 30 05 00 00       	call   710 <new_line>
 1e0:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
 1e7:	00 
 1e8:	eb 33                	jmp    21d <test_data_types+0x1fd>
 1ea:	8b 44 24 20          	mov    0x20(%esp),%eax
 1ee:	05 a4 0d 00 00       	add    $0xda4,%eax
 1f3:	0f b6 00             	movzbl (%eax),%eax
 1f6:	8b 54 24 20          	mov    0x20(%esp),%edx
 1fa:	38 d0                	cmp    %dl,%al
 1fc:	74 1a                	je     218 <test_data_types+0x1f8>
 1fe:	83 ec 0c             	sub    $0xc,%esp
 201:	68 09 0c 00 00       	push   $0xc09
 206:	e8 c5 02 00 00       	call   4d0 <print>
 20b:	83 c4 10             	add    $0x10,%esp
 20e:	b8 00 00 00 00       	mov    $0x0,%eax
 213:	e9 da 01 00 00       	jmp    3f2 <test_data_types+0x3d2>
 218:	83 44 24 20 01       	addl   $0x1,0x20(%esp)
 21d:	83 7c 24 20 09       	cmpl   $0x9,0x20(%esp)
 222:	7e c6                	jle    1ea <test_data_types+0x1ca>
 224:	83 ec 0c             	sub    $0xc,%esp
 227:	68 15 0c 00 00       	push   $0xc15
 22c:	e8 9f 02 00 00       	call   4d0 <print>
 231:	83 c4 10             	add    $0x10,%esp
 234:	e8 d7 04 00 00       	call   710 <new_line>
 239:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
 240:	00 
 241:	eb 58                	jmp    29b <test_data_types+0x27b>
 243:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 24a:	00 
 24b:	eb 42                	jmp    28f <test_data_types+0x26f>
 24d:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 251:	89 d0                	mov    %edx,%eax
 253:	c1 e0 02             	shl    $0x2,%eax
 256:	01 d0                	add    %edx,%eax
 258:	01 c0                	add    %eax,%eax
 25a:	8b 54 24 18          	mov    0x18(%esp),%edx
 25e:	01 d0                	add    %edx,%eax
 260:	05 c0 0d 00 00       	add    $0xdc0,%eax
 265:	0f b6 00             	movzbl (%eax),%eax
 268:	8b 54 24 18          	mov    0x18(%esp),%edx
 26c:	38 d0                	cmp    %dl,%al
 26e:	74 1a                	je     28a <test_data_types+0x26a>
 270:	83 ec 0c             	sub    $0xc,%esp
 273:	68 1b 0c 00 00       	push   $0xc1b
 278:	e8 53 02 00 00       	call   4d0 <print>
 27d:	83 c4 10             	add    $0x10,%esp
 280:	b8 00 00 00 00       	mov    $0x0,%eax
 285:	e9 68 01 00 00       	jmp    3f2 <test_data_types+0x3d2>
 28a:	83 44 24 18 01       	addl   $0x1,0x18(%esp)
 28f:	83 7c 24 18 09       	cmpl   $0x9,0x18(%esp)
 294:	7e b7                	jle    24d <test_data_types+0x22d>
 296:	83 44 24 1c 01       	addl   $0x1,0x1c(%esp)
 29b:	83 7c 24 1c 09       	cmpl   $0x9,0x1c(%esp)
 2a0:	7e a1                	jle    243 <test_data_types+0x223>
 2a2:	83 ec 0c             	sub    $0xc,%esp
 2a5:	68 27 0c 00 00       	push   $0xc27
 2aa:	e8 21 02 00 00       	call   4d0 <print>
 2af:	83 c4 10             	add    $0x10,%esp
 2b2:	e8 59 04 00 00       	call   710 <new_line>
 2b7:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 2be:	00 
 2bf:	eb 39                	jmp    2fa <test_data_types+0x2da>
 2c1:	8b 44 24 14          	mov    0x14(%esp),%eax
 2c5:	05 24 0e 00 00       	add    $0xe24,%eax
 2ca:	0f b6 00             	movzbl (%eax),%eax
 2cd:	0f b6 d0             	movzbl %al,%edx
 2d0:	8b 44 24 14          	mov    0x14(%esp),%eax
 2d4:	0f be c0             	movsbl %al,%eax
 2d7:	39 c2                	cmp    %eax,%edx
 2d9:	74 1a                	je     2f5 <test_data_types+0x2d5>
 2db:	83 ec 0c             	sub    $0xc,%esp
 2de:	68 2d 0c 00 00       	push   $0xc2d
 2e3:	e8 e8 01 00 00       	call   4d0 <print>
 2e8:	83 c4 10             	add    $0x10,%esp
 2eb:	b8 00 00 00 00       	mov    $0x0,%eax
 2f0:	e9 fd 00 00 00       	jmp    3f2 <test_data_types+0x3d2>
 2f5:	83 44 24 14 01       	addl   $0x1,0x14(%esp)
 2fa:	83 7c 24 14 09       	cmpl   $0x9,0x14(%esp)
 2ff:	7e c0                	jle    2c1 <test_data_types+0x2a1>
 301:	83 ec 0c             	sub    $0xc,%esp
 304:	68 39 0c 00 00       	push   $0xc39
 309:	e8 c2 01 00 00       	call   4d0 <print>
 30e:	83 c4 10             	add    $0x10,%esp
 311:	e8 fa 03 00 00       	call   710 <new_line>
 316:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
 31d:	00 
 31e:	eb 5e                	jmp    37e <test_data_types+0x35e>
 320:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 327:	00 
 328:	eb 48                	jmp    372 <test_data_types+0x352>
 32a:	8b 54 24 10          	mov    0x10(%esp),%edx
 32e:	89 d0                	mov    %edx,%eax
 330:	c1 e0 02             	shl    $0x2,%eax
 333:	01 d0                	add    %edx,%eax
 335:	01 c0                	add    %eax,%eax
 337:	8b 54 24 0c          	mov    0xc(%esp),%edx
 33b:	01 d0                	add    %edx,%eax
 33d:	05 40 0e 00 00       	add    $0xe40,%eax
 342:	0f b6 00             	movzbl (%eax),%eax
 345:	0f b6 d0             	movzbl %al,%edx
 348:	8b 44 24 0c          	mov    0xc(%esp),%eax
 34c:	0f be c0             	movsbl %al,%eax
 34f:	39 c2                	cmp    %eax,%edx
 351:	74 1a                	je     36d <test_data_types+0x34d>
 353:	83 ec 0c             	sub    $0xc,%esp
 356:	68 3f 0c 00 00       	push   $0xc3f
 35b:	e8 70 01 00 00       	call   4d0 <print>
 360:	83 c4 10             	add    $0x10,%esp
 363:	b8 00 00 00 00       	mov    $0x0,%eax
 368:	e9 85 00 00 00       	jmp    3f2 <test_data_types+0x3d2>
 36d:	83 44 24 0c 01       	addl   $0x1,0xc(%esp)
 372:	83 7c 24 0c 09       	cmpl   $0x9,0xc(%esp)
 377:	7e b1                	jle    32a <test_data_types+0x30a>
 379:	83 44 24 10 01       	addl   $0x1,0x10(%esp)
 37e:	83 7c 24 10 09       	cmpl   $0x9,0x10(%esp)
 383:	7e 9b                	jle    320 <test_data_types+0x300>
 385:	83 ec 0c             	sub    $0xc,%esp
 388:	68 4b 0c 00 00       	push   $0xc4b
 38d:	e8 3e 01 00 00       	call   4d0 <print>
 392:	83 c4 10             	add    $0x10,%esp
 395:	e8 76 03 00 00       	call   710 <new_line>
 39a:	0f b6 05 cc 0e 00 00 	movzbl 0xecc,%eax
 3a1:	3c 42                	cmp    $0x42,%al
 3a3:	74 38                	je     3dd <test_data_types+0x3bd>
 3a5:	0f b6 05 cd 0e 00 00 	movzbl 0xecd,%eax
 3ac:	3c 4f                	cmp    $0x4f,%al
 3ae:	74 2d                	je     3dd <test_data_types+0x3bd>
 3b0:	0f b6 05 ce 0e 00 00 	movzbl 0xece,%eax
 3b7:	3c 41                	cmp    $0x41,%al
 3b9:	74 22                	je     3dd <test_data_types+0x3bd>
 3bb:	0f b6 05 cf 0e 00 00 	movzbl 0xecf,%eax
 3c2:	3c 53                	cmp    $0x53,%al
 3c4:	74 17                	je     3dd <test_data_types+0x3bd>
 3c6:	83 ec 0c             	sub    $0xc,%esp
 3c9:	68 51 0c 00 00       	push   $0xc51
 3ce:	e8 fd 00 00 00       	call   4d0 <print>
 3d3:	83 c4 10             	add    $0x10,%esp
 3d6:	b8 00 00 00 00       	mov    $0x0,%eax
 3db:	eb 15                	jmp    3f2 <test_data_types+0x3d2>
 3dd:	83 ec 0c             	sub    $0xc,%esp
 3e0:	68 5d 0c 00 00       	push   $0xc5d
 3e5:	e8 e6 00 00 00       	call   4d0 <print>
 3ea:	83 c4 10             	add    $0x10,%esp
 3ed:	b8 01 00 00 00       	mov    $0x1,%eax
 3f2:	83 c4 3c             	add    $0x3c,%esp
 3f5:	c3                   	ret    
 3f6:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 3fd:	8d 76 00             	lea    0x0(%esi),%esi

00000400 <test_strings>:
 400:	83 ec 10             	sub    $0x10,%esp
 403:	c7 44 24 0c 63 0c 00 	movl   $0xc63,0xc(%esp)
 40a:	00 
 40b:	c7 44 24 08 6b 0c 00 	movl   $0xc6b,0x8(%esp)
 412:	00 
 413:	8b 44 24 08          	mov    0x8(%esp),%eax
 417:	89 44 24 0c          	mov    %eax,0xc(%esp)
 41b:	8b 44 24 0c          	mov    0xc(%esp),%eax
 41f:	89 44 24 08          	mov    %eax,0x8(%esp)
 423:	b8 00 00 00 00       	mov    $0x0,%eax
 428:	83 c4 10             	add    $0x10,%esp
 42b:	c3                   	ret    
 42c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00000430 <main>:
 430:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 434:	83 e4 f0             	and    $0xfffffff0,%esp
 437:	ff 71 fc             	pushl  -0x4(%ecx)
 43a:	55                   	push   %ebp
 43b:	89 e5                	mov    %esp,%ebp
 43d:	51                   	push   %ecx
 43e:	83 ec 14             	sub    $0x14,%esp
 441:	e8 ea 00 00 00       	call   530 <get_OS_FUNCTIONS_addr>
 446:	e8 f5 02 00 00       	call   740 <enable_int>
 44b:	e8 e0 02 00 00       	call   730 <finish_int>
 450:	c7 45 f4 74 0c 00 00 	movl   $0xc74,-0xc(%ebp)
 457:	83 ec 0c             	sub    $0xc,%esp
 45a:	ff 75 f4             	pushl  -0xc(%ebp)
 45d:	e8 ae 01 00 00       	call   610 <print_2>
 462:	83 c4 10             	add    $0x10,%esp
 465:	e8 a6 02 00 00       	call   710 <new_line>
 46a:	e8 b1 fb ff ff       	call   20 <test_data_types>
 46f:	89 45 f0             	mov    %eax,-0x10(%ebp)
 472:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 476:	75 17                	jne    48f <main+0x5f>
 478:	83 ec 0c             	sub    $0xc,%esp
 47b:	68 7f 0c 00 00       	push   $0xc7f
 480:	e8 4b 00 00 00       	call   4d0 <print>
 485:	83 c4 10             	add    $0x10,%esp
 488:	b8 00 00 00 00       	mov    $0x0,%eax
 48d:	eb 02                	jmp    491 <main+0x61>
 48f:	eb fe                	jmp    48f <main+0x5f>
 491:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 494:	c9                   	leave  
 495:	8d 61 fc             	lea    -0x4(%ecx),%esp
 498:	c3                   	ret    
 499:	66 90                	xchg   %ax,%ax
 49b:	66 90                	xchg   %ax,%ax
 49d:	66 90                	xchg   %ax,%ax
 49f:	90                   	nop

000004a0 <printASM>:
 4a0:	cd 10                	int    $0x10
 4a2:	c3                   	ret    

000004a3 <quit_app>:
 4a3:	cd 11                	int    $0x11
 4a5:	c3                   	ret    

000004a6 <inputASM>:
 4a6:	cd 12                	int    $0x12
 4a8:	c3                   	ret    

000004a9 <printADDRASM>:
 4a9:	cd 13                	int    $0x13
 4ab:	c3                   	ret    

000004ac <get_screen_accessASM>:
 4ac:	cd 16                	int    $0x16
 4ae:	c3                   	ret    

000004af <get_addrASM>:
 4af:	cd 17                	int    $0x17
 4b1:	c3                   	ret    

000004b2 <test_screen_bufferASM>:
 4b2:	cd 14                	int    $0x14
 4b4:	c3                   	ret    
 4b5:	48                   	dec    %eax
 4b6:	65 6c                	gs insb (%dx),%es:(%edi)
 4b8:	6c                   	insb   (%dx),%es:(%edi)
 4b9:	6f                   	outsl  %ds:(%esi),(%dx)
 4ba:	20 77 6f             	and    %dh,0x6f(%edi)
 4bd:	72 6c                	jb     52b <get_screen_access+0x1b>
 4bf:	64 00 66 90          	add    %ah,%fs:-0x70(%esi)
 4c3:	66 90                	xchg   %ax,%ax
 4c5:	66 90                	xchg   %ax,%ax
 4c7:	66 90                	xchg   %ax,%ax
 4c9:	66 90                	xchg   %ax,%ax
 4cb:	66 90                	xchg   %ax,%ax
 4cd:	66 90                	xchg   %ax,%ax
 4cf:	90                   	nop

000004d0 <print>:
 4d0:	8b 44 24 04          	mov    0x4(%esp),%eax
 4d4:	89 c0                	mov    %eax,%eax
 4d6:	e8 c5 ff ff ff       	call   4a0 <printASM>
 4db:	90                   	nop
 4dc:	c3                   	ret    
 4dd:	8d 76 00             	lea    0x0(%esi),%esi

000004e0 <input>:
 4e0:	83 ec 10             	sub    $0x10,%esp
 4e3:	8b 44 24 14          	mov    0x14(%esp),%eax
 4e7:	89 c0                	mov    %eax,%eax
 4e9:	e8 b8 ff ff ff       	call   4a6 <inputASM>
 4ee:	89 c0                	mov    %eax,%eax
 4f0:	89 44 24 0c          	mov    %eax,0xc(%esp)
 4f4:	8b 44 24 0c          	mov    0xc(%esp),%eax
 4f8:	83 c4 10             	add    $0x10,%esp
 4fb:	c3                   	ret    
 4fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00000500 <print_addr>:
 500:	8b 44 24 04          	mov    0x4(%esp),%eax
 504:	89 c0                	mov    %eax,%eax
 506:	e8 9e ff ff ff       	call   4a9 <printADDRASM>
 50b:	90                   	nop
 50c:	c3                   	ret    
 50d:	8d 76 00             	lea    0x0(%esi),%esi

00000510 <get_screen_access>:
 510:	83 ec 10             	sub    $0x10,%esp
 513:	e8 94 ff ff ff       	call   4ac <get_screen_accessASM>
 518:	89 c0                	mov    %eax,%eax
 51a:	89 44 24 0c          	mov    %eax,0xc(%esp)
 51e:	8b 44 24 0c          	mov    0xc(%esp),%eax
 522:	83 c4 10             	add    $0x10,%esp
 525:	c3                   	ret    
 526:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 52d:	8d 76 00             	lea    0x0(%esi),%esi

00000530 <get_OS_FUNCTIONS_addr>:
 530:	83 ec 10             	sub    $0x10,%esp
 533:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 53a:	00 
 53b:	eb 1f                	jmp    55c <get_OS_FUNCTIONS_addr+0x2c>
 53d:	e8 6d ff ff ff       	call   4af <get_addrASM>
 542:	89 c0                	mov    %eax,%eax
 544:	89 44 24 08          	mov    %eax,0x8(%esp)
 548:	8b 54 24 08          	mov    0x8(%esp),%edx
 54c:	8b 44 24 0c          	mov    0xc(%esp),%eax
 550:	89 14 85 e0 0e 00 00 	mov    %edx,0xee0(,%eax,4)
 557:	83 44 24 0c 01       	addl   $0x1,0xc(%esp)
 55c:	83 7c 24 0c 10       	cmpl   $0x10,0xc(%esp)
 561:	7e da                	jle    53d <get_OS_FUNCTIONS_addr+0xd>
 563:	90                   	nop
 564:	90                   	nop
 565:	83 c4 10             	add    $0x10,%esp
 568:	c3                   	ret    
 569:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00000570 <sleep>:
 570:	83 ec 0c             	sub    $0xc,%esp
 573:	a1 e0 0e 00 00       	mov    0xee0,%eax
 578:	83 ec 0c             	sub    $0xc,%esp
 57b:	ff 74 24 1c          	pushl  0x1c(%esp)
 57f:	ff d0                	call   *%eax
 581:	83 c4 10             	add    $0x10,%esp
 584:	90                   	nop
 585:	83 c4 0c             	add    $0xc,%esp
 588:	c3                   	ret    
 589:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00000590 <malloc>:
 590:	83 ec 1c             	sub    $0x1c,%esp
 593:	a1 e8 0e 00 00       	mov    0xee8,%eax
 598:	83 ec 0c             	sub    $0xc,%esp
 59b:	ff 74 24 2c          	pushl  0x2c(%esp)
 59f:	ff d0                	call   *%eax
 5a1:	83 c4 10             	add    $0x10,%esp
 5a4:	89 c0                	mov    %eax,%eax
 5a6:	89 44 24 0c          	mov    %eax,0xc(%esp)
 5aa:	8b 44 24 0c          	mov    0xc(%esp),%eax
 5ae:	83 c4 1c             	add    $0x1c,%esp
 5b1:	c3                   	ret    
 5b2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 5b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000005c0 <zalloc>:
 5c0:	83 ec 1c             	sub    $0x1c,%esp
 5c3:	a1 18 0f 00 00       	mov    0xf18,%eax
 5c8:	83 ec 0c             	sub    $0xc,%esp
 5cb:	ff 74 24 2c          	pushl  0x2c(%esp)
 5cf:	ff d0                	call   *%eax
 5d1:	83 c4 10             	add    $0x10,%esp
 5d4:	89 c0                	mov    %eax,%eax
 5d6:	89 44 24 0c          	mov    %eax,0xc(%esp)
 5da:	8b 44 24 0c          	mov    0xc(%esp),%eax
 5de:	83 c4 1c             	add    $0x1c,%esp
 5e1:	c3                   	ret    
 5e2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 5e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000005f0 <free>:
 5f0:	83 ec 0c             	sub    $0xc,%esp
 5f3:	a1 ec 0e 00 00       	mov    0xeec,%eax
 5f8:	83 ec 0c             	sub    $0xc,%esp
 5fb:	ff 74 24 1c          	pushl  0x1c(%esp)
 5ff:	ff d0                	call   *%eax
 601:	83 c4 10             	add    $0x10,%esp
 604:	90                   	nop
 605:	83 c4 0c             	add    $0xc,%esp
 608:	c3                   	ret    
 609:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00000610 <print_2>:
 610:	83 ec 0c             	sub    $0xc,%esp
 613:	a1 e4 0e 00 00       	mov    0xee4,%eax
 618:	83 ec 0c             	sub    $0xc,%esp
 61b:	ff 74 24 1c          	pushl  0x1c(%esp)
 61f:	ff d0                	call   *%eax
 621:	83 c4 10             	add    $0x10,%esp
 624:	90                   	nop
 625:	83 c4 0c             	add    $0xc,%esp
 628:	c3                   	ret    
 629:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00000630 <test_screen_buffer>:
 630:	83 ec 10             	sub    $0x10,%esp
 633:	e8 7a fe ff ff       	call   4b2 <test_screen_bufferASM>
 638:	89 c0                	mov    %eax,%eax
 63a:	89 44 24 0c          	mov    %eax,0xc(%esp)
 63e:	8b 44 24 0c          	mov    0xc(%esp),%eax
 642:	83 c4 10             	add    $0x10,%esp
 645:	c3                   	ret    
 646:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 64d:	8d 76 00             	lea    0x0(%esi),%esi

00000650 <memset>:
 650:	83 ec 1c             	sub    $0x1c,%esp
 653:	a1 f0 0e 00 00       	mov    0xef0,%eax
 658:	83 ec 04             	sub    $0x4,%esp
 65b:	ff 74 24 2c          	pushl  0x2c(%esp)
 65f:	ff 74 24 2c          	pushl  0x2c(%esp)
 663:	ff 74 24 2c          	pushl  0x2c(%esp)
 667:	ff d0                	call   *%eax
 669:	83 c4 10             	add    $0x10,%esp
 66c:	89 c0                	mov    %eax,%eax
 66e:	89 44 24 0c          	mov    %eax,0xc(%esp)
 672:	8b 44 24 0c          	mov    0xc(%esp),%eax
 676:	83 c4 1c             	add    $0x1c,%esp
 679:	c3                   	ret    
 67a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00000680 <memcpy>:
 680:	83 ec 1c             	sub    $0x1c,%esp
 683:	a1 f4 0e 00 00       	mov    0xef4,%eax
 688:	83 ec 04             	sub    $0x4,%esp
 68b:	ff 74 24 2c          	pushl  0x2c(%esp)
 68f:	ff 74 24 2c          	pushl  0x2c(%esp)
 693:	ff 74 24 2c          	pushl  0x2c(%esp)
 697:	ff d0                	call   *%eax
 699:	83 c4 10             	add    $0x10,%esp
 69c:	89 c0                	mov    %eax,%eax
 69e:	89 44 24 0c          	mov    %eax,0xc(%esp)
 6a2:	8b 44 24 0c          	mov    0xc(%esp),%eax
 6a6:	83 c4 1c             	add    $0x1c,%esp
 6a9:	c3                   	ret    
 6aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000006b0 <memcpy_prgm>:
 6b0:	83 ec 1c             	sub    $0x1c,%esp
 6b3:	a1 1c 0f 00 00       	mov    0xf1c,%eax
 6b8:	83 ec 04             	sub    $0x4,%esp
 6bb:	ff 74 24 2c          	pushl  0x2c(%esp)
 6bf:	ff 74 24 2c          	pushl  0x2c(%esp)
 6c3:	ff 74 24 2c          	pushl  0x2c(%esp)
 6c7:	ff d0                	call   *%eax
 6c9:	83 c4 10             	add    $0x10,%esp
 6cc:	89 c0                	mov    %eax,%eax
 6ce:	89 44 24 0c          	mov    %eax,0xc(%esp)
 6d2:	8b 44 24 0c          	mov    0xc(%esp),%eax
 6d6:	83 c4 1c             	add    $0x1c,%esp
 6d9:	c3                   	ret    
 6da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000006e0 <memcmp>:
 6e0:	83 ec 1c             	sub    $0x1c,%esp
 6e3:	a1 f8 0e 00 00       	mov    0xef8,%eax
 6e8:	83 ec 04             	sub    $0x4,%esp
 6eb:	ff 74 24 2c          	pushl  0x2c(%esp)
 6ef:	ff 74 24 2c          	pushl  0x2c(%esp)
 6f3:	ff 74 24 2c          	pushl  0x2c(%esp)
 6f7:	ff d0                	call   *%eax
 6f9:	83 c4 10             	add    $0x10,%esp
 6fc:	89 c0                	mov    %eax,%eax
 6fe:	89 44 24 0c          	mov    %eax,0xc(%esp)
 702:	8b 44 24 0c          	mov    0xc(%esp),%eax
 706:	83 c4 1c             	add    $0x1c,%esp
 709:	c3                   	ret    
 70a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00000710 <new_line>:
 710:	83 ec 0c             	sub    $0xc,%esp
 713:	a1 fc 0e 00 00       	mov    0xefc,%eax
 718:	ff d0                	call   *%eax
 71a:	90                   	nop
 71b:	83 c4 0c             	add    $0xc,%esp
 71e:	c3                   	ret    
 71f:	90                   	nop

00000720 <clear_screen>:
 720:	83 ec 0c             	sub    $0xc,%esp
 723:	a1 00 0f 00 00       	mov    0xf00,%eax
 728:	ff d0                	call   *%eax
 72a:	90                   	nop
 72b:	83 c4 0c             	add    $0xc,%esp
 72e:	c3                   	ret    
 72f:	90                   	nop

00000730 <finish_int>:
 730:	83 ec 0c             	sub    $0xc,%esp
 733:	a1 08 0f 00 00       	mov    0xf08,%eax
 738:	ff d0                	call   *%eax
 73a:	90                   	nop
 73b:	83 c4 0c             	add    $0xc,%esp
 73e:	c3                   	ret    
 73f:	90                   	nop

00000740 <enable_int>:
 740:	83 ec 0c             	sub    $0xc,%esp
 743:	a1 0c 0f 00 00       	mov    0xf0c,%eax
 748:	ff d0                	call   *%eax
 74a:	90                   	nop
 74b:	83 c4 0c             	add    $0xc,%esp
 74e:	c3                   	ret    
 74f:	90                   	nop

00000750 <get_mouse_info>:
 750:	83 ec 1c             	sub    $0x1c,%esp
 753:	a1 04 0f 00 00       	mov    0xf04,%eax
 758:	ff d0                	call   *%eax
 75a:	89 c0                	mov    %eax,%eax
 75c:	89 44 24 0c          	mov    %eax,0xc(%esp)
 760:	8b 44 24 0c          	mov    0xc(%esp),%eax
 764:	83 c4 1c             	add    $0x1c,%esp
 767:	c3                   	ret    
 768:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 76f:	90                   	nop

00000770 <get_clock>:
 770:	83 ec 1c             	sub    $0x1c,%esp
 773:	a1 10 0f 00 00       	mov    0xf10,%eax
 778:	ff d0                	call   *%eax
 77a:	89 c0                	mov    %eax,%eax
 77c:	89 44 24 0c          	mov    %eax,0xc(%esp)
 780:	8b 44 24 0c          	mov    0xc(%esp),%eax
 784:	83 c4 1c             	add    $0x1c,%esp
 787:	c3                   	ret    
 788:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 78f:	90                   	nop

00000790 <set_buffer>:
 790:	83 ec 1c             	sub    $0x1c,%esp
 793:	a1 14 0f 00 00       	mov    0xf14,%eax
 798:	ff d0                	call   *%eax
 79a:	89 c0                	mov    %eax,%eax
 79c:	89 44 24 0c          	mov    %eax,0xc(%esp)
 7a0:	8b 44 24 0c          	mov    0xc(%esp),%eax
 7a4:	83 c4 1c             	add    $0x1c,%esp
 7a7:	c3                   	ret    
 7a8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 7af:	90                   	nop

000007b0 <sleep_this>:
 7b0:	83 ec 2c             	sub    $0x2c,%esp
 7b3:	e8 b8 ff ff ff       	call   770 <get_clock>
 7b8:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 7bc:	83 ec 0c             	sub    $0xc,%esp
 7bf:	6a 1c                	push   $0x1c
 7c1:	e8 ca fd ff ff       	call   590 <malloc>
 7c6:	83 c4 10             	add    $0x10,%esp
 7c9:	89 44 24 18          	mov    %eax,0x18(%esp)
 7cd:	83 ec 04             	sub    $0x4,%esp
 7d0:	6a 1c                	push   $0x1c
 7d2:	ff 74 24 24          	pushl  0x24(%esp)
 7d6:	ff 74 24 24          	pushl  0x24(%esp)
 7da:	e8 a1 fe ff ff       	call   680 <memcpy>
 7df:	83 c4 10             	add    $0x10,%esp
 7e2:	8b 4c 24 30          	mov    0x30(%esp),%ecx
 7e6:	ba d3 4d 62 10       	mov    $0x10624dd3,%edx
 7eb:	89 c8                	mov    %ecx,%eax
 7ed:	f7 ea                	imul   %edx
 7ef:	89 d0                	mov    %edx,%eax
 7f1:	c1 f8 06             	sar    $0x6,%eax
 7f4:	c1 f9 1f             	sar    $0x1f,%ecx
 7f7:	89 ca                	mov    %ecx,%edx
 7f9:	29 d0                	sub    %edx,%eax
 7fb:	89 44 24 14          	mov    %eax,0x14(%esp)
 7ff:	8b 44 24 14          	mov    0x14(%esp),%eax
 803:	69 d0 18 fc ff ff    	imul   $0xfffffc18,%eax,%edx
 809:	8b 44 24 30          	mov    0x30(%esp),%eax
 80d:	01 d0                	add    %edx,%eax
 80f:	89 44 24 10          	mov    %eax,0x10(%esp)
 813:	8b 44 24 18          	mov    0x18(%esp),%eax
 817:	8b 50 04             	mov    0x4(%eax),%edx
 81a:	8b 44 24 10          	mov    0x10(%esp),%eax
 81e:	01 d0                	add    %edx,%eax
 820:	3d e7 03 00 00       	cmp    $0x3e7,%eax
 825:	7e 2d                	jle    854 <sleep_this+0xa4>
 827:	8b 44 24 18          	mov    0x18(%esp),%eax
 82b:	8b 50 04             	mov    0x4(%eax),%edx
 82e:	8b 44 24 10          	mov    0x10(%esp),%eax
 832:	01 d0                	add    %edx,%eax
 834:	8d 90 18 fc ff ff    	lea    -0x3e8(%eax),%edx
 83a:	8b 44 24 18          	mov    0x18(%esp),%eax
 83e:	89 50 04             	mov    %edx,0x4(%eax)
 841:	8b 44 24 18          	mov    0x18(%esp),%eax
 845:	8b 40 08             	mov    0x8(%eax),%eax
 848:	8d 50 01             	lea    0x1(%eax),%edx
 84b:	8b 44 24 18          	mov    0x18(%esp),%eax
 84f:	89 50 08             	mov    %edx,0x8(%eax)
 852:	eb 14                	jmp    868 <sleep_this+0xb8>
 854:	8b 44 24 18          	mov    0x18(%esp),%eax
 858:	8b 50 04             	mov    0x4(%eax),%edx
 85b:	8b 44 24 10          	mov    0x10(%esp),%eax
 85f:	01 c2                	add    %eax,%edx
 861:	8b 44 24 18          	mov    0x18(%esp),%eax
 865:	89 50 04             	mov    %edx,0x4(%eax)
 868:	8b 44 24 18          	mov    0x18(%esp),%eax
 86c:	8b 50 08             	mov    0x8(%eax),%edx
 86f:	8b 44 24 14          	mov    0x14(%esp),%eax
 873:	01 d0                	add    %edx,%eax
 875:	83 f8 3b             	cmp    $0x3b,%eax
 878:	7e 2a                	jle    8a4 <sleep_this+0xf4>
 87a:	8b 44 24 18          	mov    0x18(%esp),%eax
 87e:	8b 50 08             	mov    0x8(%eax),%edx
 881:	8b 44 24 14          	mov    0x14(%esp),%eax
 885:	01 d0                	add    %edx,%eax
 887:	8d 50 c4             	lea    -0x3c(%eax),%edx
 88a:	8b 44 24 18          	mov    0x18(%esp),%eax
 88e:	89 50 08             	mov    %edx,0x8(%eax)
 891:	8b 44 24 18          	mov    0x18(%esp),%eax
 895:	8b 40 0c             	mov    0xc(%eax),%eax
 898:	8d 50 01             	lea    0x1(%eax),%edx
 89b:	8b 44 24 18          	mov    0x18(%esp),%eax
 89f:	89 50 0c             	mov    %edx,0xc(%eax)
 8a2:	eb 14                	jmp    8b8 <sleep_this+0x108>
 8a4:	8b 44 24 18          	mov    0x18(%esp),%eax
 8a8:	8b 50 08             	mov    0x8(%eax),%edx
 8ab:	8b 44 24 14          	mov    0x14(%esp),%eax
 8af:	01 c2                	add    %eax,%edx
 8b1:	8b 44 24 18          	mov    0x18(%esp),%eax
 8b5:	89 50 08             	mov    %edx,0x8(%eax)
 8b8:	8b 44 24 18          	mov    0x18(%esp),%eax
 8bc:	8b 50 04             	mov    0x4(%eax),%edx
 8bf:	8b 44 24 18          	mov    0x18(%esp),%eax
 8c3:	8b 40 08             	mov    0x8(%eax),%eax
 8c6:	69 c0 e8 03 00 00    	imul   $0x3e8,%eax,%eax
 8cc:	01 c2                	add    %eax,%edx
 8ce:	8b 44 24 18          	mov    0x18(%esp),%eax
 8d2:	8b 40 0c             	mov    0xc(%eax),%eax
 8d5:	69 c0 60 ea 00 00    	imul   $0xea60,%eax,%eax
 8db:	01 c2                	add    %eax,%edx
 8dd:	8b 44 24 18          	mov    0x18(%esp),%eax
 8e1:	8b 40 10             	mov    0x10(%eax),%eax
 8e4:	69 c0 80 ee 36 00    	imul   $0x36ee80,%eax,%eax
 8ea:	01 d0                	add    %edx,%eax
 8ec:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8f0:	90                   	nop
 8f1:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8f5:	8b 50 04             	mov    0x4(%eax),%edx
 8f8:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 8fc:	8b 40 08             	mov    0x8(%eax),%eax
 8ff:	69 c0 e8 03 00 00    	imul   $0x3e8,%eax,%eax
 905:	01 c2                	add    %eax,%edx
 907:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 90b:	8b 40 0c             	mov    0xc(%eax),%eax
 90e:	69 c0 60 ea 00 00    	imul   $0xea60,%eax,%eax
 914:	01 c2                	add    %eax,%edx
 916:	8b 44 24 1c          	mov    0x1c(%esp),%eax
 91a:	8b 40 10             	mov    0x10(%eax),%eax
 91d:	69 c0 80 ee 36 00    	imul   $0x36ee80,%eax,%eax
 923:	01 d0                	add    %edx,%eax
 925:	39 44 24 0c          	cmp    %eax,0xc(%esp)
 929:	7f c6                	jg     8f1 <sleep_this+0x141>
 92b:	83 ec 0c             	sub    $0xc,%esp
 92e:	ff 74 24 24          	pushl  0x24(%esp)
 932:	e8 b9 fc ff ff       	call   5f0 <free>
 937:	83 c4 10             	add    $0x10,%esp
 93a:	90                   	nop
 93b:	83 c4 2c             	add    $0x2c,%esp
 93e:	c3                   	ret    
 93f:	90                   	nop

00000940 <get_prgm_offset>:
 940:	83 ec 1c             	sub    $0x1c,%esp
 943:	a1 20 0f 00 00       	mov    0xf20,%eax
 948:	ff d0                	call   *%eax
 94a:	89 c0                	mov    %eax,%eax
 94c:	89 44 24 0c          	mov    %eax,0xc(%esp)
 950:	8b 44 24 0c          	mov    0xc(%esp),%eax
 954:	83 c4 1c             	add    $0x1c,%esp
 957:	c3                   	ret    
 958:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 95f:	90                   	nop

00000960 <test_prgm>:
 960:	83 ec 2c             	sub    $0x2c,%esp
 963:	83 ec 0c             	sub    $0xc,%esp
 966:	68 00 04 00 00       	push   $0x400
 96b:	e8 20 fc ff ff       	call   590 <malloc>
 970:	83 c4 10             	add    $0x10,%esp
 973:	89 44 24 14          	mov    %eax,0x14(%esp)
 977:	83 ec 0c             	sub    $0xc,%esp
 97a:	68 00 04 00 00       	push   $0x400
 97f:	e8 0c fc ff ff       	call   590 <malloc>
 984:	83 c4 10             	add    $0x10,%esp
 987:	89 44 24 10          	mov    %eax,0x10(%esp)
 98b:	8b 44 24 14          	mov    0x14(%esp),%eax
 98f:	3b 44 24 10          	cmp    0x10(%esp),%eax
 993:	74 15                	je     9aa <test_prgm+0x4a>
 995:	83 ec 0c             	sub    $0xc,%esp
 998:	68 8f 0c 00 00       	push   $0xc8f
 99d:	e8 2e fb ff ff       	call   4d0 <print>
 9a2:	83 c4 10             	add    $0x10,%esp
 9a5:	e8 66 fd ff ff       	call   710 <new_line>
 9aa:	8b 44 24 14          	mov    0x14(%esp),%eax
 9ae:	05 00 10 00 00       	add    $0x1000,%eax
 9b3:	39 44 24 10          	cmp    %eax,0x10(%esp)
 9b7:	75 15                	jne    9ce <test_prgm+0x6e>
 9b9:	83 ec 0c             	sub    $0xc,%esp
 9bc:	68 9d 0c 00 00       	push   $0xc9d
 9c1:	e8 0a fb ff ff       	call   4d0 <print>
 9c6:	83 c4 10             	add    $0x10,%esp
 9c9:	e8 42 fd ff ff       	call   710 <new_line>
 9ce:	83 ec 0c             	sub    $0xc,%esp
 9d1:	68 00 04 00 00       	push   $0x400
 9d6:	e8 b5 fb ff ff       	call   590 <malloc>
 9db:	83 c4 10             	add    $0x10,%esp
 9de:	89 44 24 0c          	mov    %eax,0xc(%esp)
 9e2:	83 ec 0c             	sub    $0xc,%esp
 9e5:	ff 74 24 18          	pushl  0x18(%esp)
 9e9:	e8 02 fc ff ff       	call   5f0 <free>
 9ee:	83 c4 10             	add    $0x10,%esp
 9f1:	83 ec 0c             	sub    $0xc,%esp
 9f4:	68 00 04 00 00       	push   $0x400
 9f9:	e8 92 fb ff ff       	call   590 <malloc>
 9fe:	83 c4 10             	add    $0x10,%esp
 a01:	89 44 24 08          	mov    %eax,0x8(%esp)
 a05:	8b 44 24 0c          	mov    0xc(%esp),%eax
 a09:	3b 44 24 08          	cmp    0x8(%esp),%eax
 a0d:	75 15                	jne    a24 <test_prgm+0xc4>
 a0f:	83 ec 0c             	sub    $0xc,%esp
 a12:	68 ab 0c 00 00       	push   $0xcab
 a17:	e8 b4 fa ff ff       	call   4d0 <print>
 a1c:	83 c4 10             	add    $0x10,%esp
 a1f:	e8 ec fc ff ff       	call   710 <new_line>
 a24:	83 ec 0c             	sub    $0xc,%esp
 a27:	ff 74 24 20          	pushl  0x20(%esp)
 a2b:	e8 c0 fb ff ff       	call   5f0 <free>
 a30:	83 c4 10             	add    $0x10,%esp
 a33:	83 ec 0c             	sub    $0xc,%esp
 a36:	ff 74 24 1c          	pushl  0x1c(%esp)
 a3a:	e8 b1 fb ff ff       	call   5f0 <free>
 a3f:	83 c4 10             	add    $0x10,%esp
 a42:	83 ec 0c             	sub    $0xc,%esp
 a45:	ff 74 24 14          	pushl  0x14(%esp)
 a49:	e8 a2 fb ff ff       	call   5f0 <free>
 a4e:	83 c4 10             	add    $0x10,%esp
 a51:	83 ec 0c             	sub    $0xc,%esp
 a54:	68 00 10 00 00       	push   $0x1000
 a59:	e8 32 fb ff ff       	call   590 <malloc>
 a5e:	83 c4 10             	add    $0x10,%esp
 a61:	89 44 24 04          	mov    %eax,0x4(%esp)
 a65:	83 ec 04             	sub    $0x4,%esp
 a68:	68 00 10 00 00       	push   $0x1000
 a6d:	6a 41                	push   $0x41
 a6f:	ff 74 24 10          	pushl  0x10(%esp)
 a73:	e8 d8 fb ff ff       	call   650 <memset>
 a78:	83 c4 10             	add    $0x10,%esp
 a7b:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
 a82:	00 
 a83:	eb 26                	jmp    aab <test_prgm+0x14b>
 a85:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 a89:	8b 44 24 04          	mov    0x4(%esp),%eax
 a8d:	01 d0                	add    %edx,%eax
 a8f:	0f b6 00             	movzbl (%eax),%eax
 a92:	3c 41                	cmp    $0x41,%al
 a94:	74 10                	je     aa6 <test_prgm+0x146>
 a96:	83 ec 0c             	sub    $0xc,%esp
 a99:	68 b7 0c 00 00       	push   $0xcb7
 a9e:	e8 2d fa ff ff       	call   4d0 <print>
 aa3:	83 c4 10             	add    $0x10,%esp
 aa6:	83 44 24 1c 01       	addl   $0x1,0x1c(%esp)
 aab:	81 7c 24 1c ff 0f 00 	cmpl   $0xfff,0x1c(%esp)
 ab2:	00 
 ab3:	7e d0                	jle    a85 <test_prgm+0x125>
 ab5:	83 ec 0c             	sub    $0xc,%esp
 ab8:	68 c6 0c 00 00       	push   $0xcc6
 abd:	e8 0e fa ff ff       	call   4d0 <print>
 ac2:	83 c4 10             	add    $0x10,%esp
 ac5:	e8 46 fc ff ff       	call   710 <new_line>
 aca:	83 ec 0c             	sub    $0xc,%esp
 acd:	68 00 10 00 00       	push   $0x1000
 ad2:	e8 b9 fa ff ff       	call   590 <malloc>
 ad7:	83 c4 10             	add    $0x10,%esp
 ada:	89 04 24             	mov    %eax,(%esp)
 add:	83 ec 04             	sub    $0x4,%esp
 ae0:	68 00 10 00 00       	push   $0x1000
 ae5:	ff 74 24 0c          	pushl  0xc(%esp)
 ae9:	ff 74 24 0c          	pushl  0xc(%esp)
 aed:	e8 8e fb ff ff       	call   680 <memcpy>
 af2:	83 c4 10             	add    $0x10,%esp
 af5:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
 afc:	00 
 afd:	eb 25                	jmp    b24 <test_prgm+0x1c4>
 aff:	8b 54 24 18          	mov    0x18(%esp),%edx
 b03:	8b 04 24             	mov    (%esp),%eax
 b06:	01 d0                	add    %edx,%eax
 b08:	0f b6 00             	movzbl (%eax),%eax
 b0b:	3c 41                	cmp    $0x41,%al
 b0d:	74 10                	je     b1f <test_prgm+0x1bf>
 b0f:	83 ec 0c             	sub    $0xc,%esp
 b12:	68 d6 0c 00 00       	push   $0xcd6
 b17:	e8 b4 f9 ff ff       	call   4d0 <print>
 b1c:	83 c4 10             	add    $0x10,%esp
 b1f:	83 44 24 18 01       	addl   $0x1,0x18(%esp)
 b24:	81 7c 24 18 ff 0f 00 	cmpl   $0xfff,0x18(%esp)
 b2b:	00 
 b2c:	7e d1                	jle    aff <test_prgm+0x19f>
 b2e:	83 ec 0c             	sub    $0xc,%esp
 b31:	68 e5 0c 00 00       	push   $0xce5
 b36:	e8 95 f9 ff ff       	call   4d0 <print>
 b3b:	83 c4 10             	add    $0x10,%esp
 b3e:	e8 cd fb ff ff       	call   710 <new_line>
 b43:	83 ec 04             	sub    $0x4,%esp
 b46:	68 00 10 00 00       	push   $0x1000
 b4b:	ff 74 24 0c          	pushl  0xc(%esp)
 b4f:	ff 74 24 0c          	pushl  0xc(%esp)
 b53:	e8 88 fb ff ff       	call   6e0 <memcmp>
 b58:	83 c4 10             	add    $0x10,%esp
 b5b:	85 c0                	test   %eax,%eax
 b5d:	74 10                	je     b6f <test_prgm+0x20f>
 b5f:	83 ec 0c             	sub    $0xc,%esp
 b62:	68 f5 0c 00 00       	push   $0xcf5
 b67:	e8 64 f9 ff ff       	call   4d0 <print>
 b6c:	83 c4 10             	add    $0x10,%esp
 b6f:	83 ec 0c             	sub    $0xc,%esp
 b72:	68 04 0d 00 00       	push   $0xd04
 b77:	e8 54 f9 ff ff       	call   4d0 <print>
 b7c:	83 c4 10             	add    $0x10,%esp
 b7f:	e8 8c fb ff ff       	call   710 <new_line>
 b84:	83 ec 0c             	sub    $0xc,%esp
 b87:	ff 74 24 0c          	pushl  0xc(%esp)
 b8b:	e8 60 fa ff ff       	call   5f0 <free>
 b90:	83 c4 10             	add    $0x10,%esp
 b93:	83 ec 0c             	sub    $0xc,%esp
 b96:	ff 74 24 10          	pushl  0x10(%esp)
 b9a:	e8 51 fa ff ff       	call   5f0 <free>
 b9f:	83 c4 10             	add    $0x10,%esp
 ba2:	90                   	nop
 ba3:	83 c4 2c             	add    $0x2c,%esp
 ba6:	c3                   	ret    
